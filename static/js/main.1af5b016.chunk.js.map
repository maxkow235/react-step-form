{"version":3,"sources":["components/Confirm.js","components/FormPersonalDetails.js","components/FormUserDetails.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["Confirm","props","values","renderedList","Object","keys","map","key","react_default","a","createElement","List","primaryText","str","replace","toUpperCase","secondaryText","MuiThemeProvider_default","Fragment","AppBar_default","title","RaisedButton_default","primary","label","style","styles","button","onClick","nextStep","prevStep","margin","FormPersonalDetails","handleChange","TextField_default","hintText","floatingLabelText","onChange","defaultValue","occupation","FormUserDetails","firstName","email","Success","UserForm","state","step","input","e","_this","setState","defineProperty","target","value","this","_this$state","bind","Component","App","className","UserForm_UserForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1af5b016.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport {List, ListItem} from \"material-ui/List\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nexport default function Confirm(props) {\r\n  const { values } = props;\r\n\r\n  const next = () => {\r\n    props.nextStep();\r\n  };\r\n\r\n  const back = () => {\r\n    props.prevStep();\r\n  };\r\n\r\n  const toSentenceCase = (str) => {\r\n    return str.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); })\r\n  }\r\n\r\n  const renderedList = Object.keys(values).map(key => {\r\n    return <ListItem key={key} primaryText={toSentenceCase(key)} secondaryText={values[key]}/>;\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider>\r\n      <>\r\n        <AppBar title=\"Confirm\" />\r\n          <List>\r\n            {renderedList}\r\n          </List>\r\n        <br />\r\n        <RaisedButton\r\n          primary={true}\r\n          label=\"Confirm & Submit\"\r\n          style={styles.button}\r\n          onClick={next}\r\n        />\r\n        <RaisedButton\r\n          primary={false}\r\n          label=\"Back\"\r\n          style={styles.button}\r\n          onClick={back}\r\n        />\r\n      </>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nexport default function FormPersonalDetails(props) {\r\n  const { values, handleChange } = props;\r\n\r\n  const next = () => {\r\n    props.nextStep();\r\n  };\r\n\r\n  const back = () => {\r\n    props.prevStep();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MuiThemeProvider>\r\n        <>\r\n          <AppBar title=\"Personal Details\" />\r\n\r\n          <TextField\r\n            hintText=\"Enter Your Occupation\"\r\n            floatingLabelText=\"Occupation\"\r\n            onChange={handleChange(\"occupation\")}\r\n            defaultValue={values.occupation}\r\n          />\r\n          <br />\r\n          <RaisedButton primary={true} label=\"Next\" style={styles.button} onClick={next}/>\r\n          <RaisedButton primary={false} label=\"Back\" style={styles.button} onClick={back} />\r\n        </>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nexport default function FormUserDetails(props) {\r\n  const { values, handleChange } = props;\r\n\r\n  const next = () => {\r\n    props.nextStep();\r\n  };\r\n\r\n  return (\r\n    <MuiThemeProvider>\r\n      <>\r\n        <AppBar title=\"User Details\" />\r\n        <TextField\r\n          hintText=\"Enter Your First Name\"\r\n          floatingLabelText=\"First Name\"\r\n          onChange={handleChange('firstName')}\r\n          defaultValue={values.firstName}\r\n        />\r\n        <br/>\r\n        <TextField\r\n          hintText=\"Enter Your Email\"\r\n          floatingLabelText=\"Email\"\r\n          onChange={handleChange('email')}\r\n          defaultValue={values.email}\r\n        />\r\n        <br/>\r\n        <RaisedButton primary={true} label=\"Next\" style={styles.button} onClick={next}/>\r\n       \r\n      </>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\n\r\nconst styles = {\r\n  button:{\r\n    margin:15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\n\r\nexport default function Success() {\r\n  return (\r\n    <MuiThemeProvider>\r\n        <>\r\n          <AppBar title=\"Success!\" />\r\n\r\n          <h1>Thank You for your submission</h1>\r\n          \r\n        </>\r\n      </MuiThemeProvider>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Confirm from \"./Confirm\";\r\nimport FormPersonalDetails from \"./FormPersonalDetails\";\r\nimport FormUserDetails from \"./FormUserDetails\";\r\nimport Success from \"./Success\";\r\n\r\nexport default class UserForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    firstName: \"\",\r\n    email: \"\",\r\n    occupation: \"\"\r\n  };\r\n\r\n  //Proceed to the next step\r\n  nextStep() {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step + 1\r\n    });\r\n  }\r\n\r\n  prevStep() {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1\r\n    });\r\n  }\r\n\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    const { firstName, email, occupation } = this.state;\r\n    const values = { firstName, email, occupation };\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <FormUserDetails\r\n            values={values}\r\n            nextStep={this.nextStep.bind(this)}\r\n            handleChange={this.handleChange.bind(this)}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <FormPersonalDetails\r\n            values={values}\r\n            nextStep={this.nextStep.bind(this)}\r\n            prevStep={this.prevStep.bind(this)}\r\n            handleChange={this.handleChange.bind(this)}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Confirm\r\n            values={values}\r\n            nextStep={this.nextStep.bind(this)}\r\n            prevStep={this.prevStep.bind(this)}\r\n          />\r\n        );\r\n      case 4:\r\n        return <Success />;\r\n      default:\r\n        return <div>Error</div>;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport UserForm from './components/UserForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <UserForm/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}